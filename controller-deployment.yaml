apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-controller
  template:
    metadata:
      labels:
        app: sample-controller
    spec:
      serviceAccountName: sample-controller
      containers:
        - name: sample-controller
          # image: sample-controller:latest
          image: luanzhuxian/sample-controller:latest
          imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sample-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sample-controller
rules:
  - apiGroups: [""]
    resources: ["pods", "services", "configmaps", "secrets", "events"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["samplecontroller.k8s.io"]
    resources: ["foos"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["samplecontroller.k8s.io"]
    resources: ["foos/status"]
    verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sample-controller
subjects:
  - kind: ServiceAccount
    name: sample-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: sample-controller
  apiGroup: rbac.authorization.k8s.io
